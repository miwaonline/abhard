webservice:
  port: 8080  # the main port for the app
http:  # http client config
  max_retries: 3
  connect_timeout: 5
  total_timeout: 20
  # We can optionally provide proxy server:
  # proxies:
  #   http: http://127.0.0.1:8080
  #   https: http://127.0.0.1:8080
  # A SOCKS5 proxy config example that additionally skips some domains:
  # proxies:
  #   http: socks5://127.0.0.1:8080
  #   https: socks5://127.0.0.1:8080
  #   no_proxy: 'localhost,127.0.0.1'
log:
  path: "/var/log/abhard/"
rro:
  - name: 'prro1'
    type: 'eusign'
    keyfile: 'keys/pb_0123456789.jks'
    keypass: 'supersecret'
    id: 1
scaner:
  - name: "scaner0"
    type: "serial"
    device: "/dev/scaner0"
    socket_port: 8765
    # Usually you dont need to change these
    # baudrate: 9600
    # bytesize: 8
    # timeout: 1
    # parity: None
    # stopbits: None
    # xonxoff: False
    # dsrdtr: True
  - name: "scaner1"
    type: "redirect"
    socket_port: 8765
    socket_host: "192.168.1.2"
printer:
  - name: "printer0"
    type: "usb"
    vendor_id: 0x1234
    product_id: 0x5678
    # in_ep: 12  # lsusb -vvv -d xxxx:xxxx | grep iInterface
    # out_ep: 1  # lsusb -vvv -d xxxx:xxxx | grep bEndpointAddress | grep OUT
    # profile: 'default' # https://python-escpos.readthedocs.io/en/latest/printer_profiles/available-profiles.html
    # width: 305 # optional; better to set proper profile
  - name: "printer1"
    type: "serial"
    device: "/dev/ttyS0" # COM1 in Windows
  - name: "printer2"
    type: "file"
    device: "/dev/printer1"
  - name: "printer3"
    type: "network"
    host: "237.84.2.178"
    port: 9100
  - name: "printer4"
    type: "cups"
    printer_name: "CUPS printer3"
  - name: "printer5"
    type: "windows"
    printer_name: "Windows printer4"
  - name: "printer6"
    type: "dummy"